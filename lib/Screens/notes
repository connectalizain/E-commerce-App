 Container(
                  height: 500,
                  child: FutureBuilder(
                      future: getAllProducts(),
                      builder: (BuildContext context, AsyncSnapshot snapshot) {
                        if (snapshot.hasData) {
                          return GridView.builder(
                            padding: EdgeInsets.all(10),
                              gridDelegate:
                                  const SliverGridDelegateWithFixedCrossAxisCount(
                                      crossAxisCount: 2,
                                      crossAxisSpacing: 10),
                              itemCount: 2,
                              itemBuilder: (context, index) {
                                return Container(
                                   height: 80,
                                  color: Colors.white,
                                  child: Column(
                                    children: [
                                      Expanded(
                                        child: Container(
                                          // height:
                                          //  MediaQuery.of(context).size.height *
                                          //     0.5,
                                          decoration: BoxDecoration(
                                              shape: BoxShape.rectangle,
                                              image: DecorationImage(
                                                  image: NetworkImage((snapshot
                                                      .data
                                                      .docs[index]['Image'])))),
                                          child: Column(
                                            children: [
                                            SizedBox(  height:
                                           MediaQuery.of(context).size.height *
                                              0.5,),
                                              Text((snapshot.data.docs[index]
                                                  ['Title'])),
                                              Text(
                                                  'Rs. ${(snapshot.data.docs[index]['Price'])}'),
                                              ListTile(
                                                leading: Container(
                                                  width:15,
                                                  height: 15,
                                                  decoration: const BoxDecoration(
                                                      shape: BoxShape.circle,
                                                      color: Colors.transparent),
                                                  child: Row(
                                                    children: [
                                                      Icon(Icons.star),
                                                      Text('4.6'),
                                                      SizedBox(
                                                        width:
                                                            MediaQuery.of(context)
                                                                    .size
                                                                    .width *
                                                                0.2,
                                                      ),
                                                      Text('86 reviews')
                                                    ],
                                                  ),
                                                ),
                                              )
                                            ],
                                          ),
                                        ),
                                      )
                                    ],
                                  ),
                                );
                              });
                        } else {
                          return CircularProgressIndicator();
                        }
                      }),
                ),